Local Storageの扱いについて質問です。

以下のような構成で、htmlのリストボックスの番号(位置)を覚えさせる、
チェックボックスを用意しました。

チェックボックスにチェックを入れ、リストを選択した後に以下の動作をさせました。
a. ブラウザの更新ボタンを押す
b. ブラウザを閉じてから再び開く

a., b.とも1回目は選択されたリストが選ばれ、かつチェックされた状態でページが表示されます。
ところが2回目は先頭のリストが選ばれ、かつチェックされていない状態でページが表示されてしまいます。
何故、2回目に失敗するのかが分かりません。
開発ツールで追いかけてみると、
更新ボタンを押すと、deq01_v2.jsのchangeType()が呼ばれているようなのです。
ここで、storageFlgがfalseのため、ストレージのデータが消えてしまうようなのですが、
1回目が期待通りの動きをすることが解せません。

チェックされていれば、何回更新してもチェックされたリストが選択され、
チェックされていなければ、リストの先頭が選択されるようにするにはどうすれば良いでしょうか？
なお、デフォルトではチェックされていない状態にしたいと思っています。
また、今の作り方では、Local Storageに "selectedType" が作られてしまうと、値の有無を問わず、
selectedTypeが残り続けてしまいます。
チェックされていないときは、これも削除してしまいたいです。
いろいろと欲張りましたが、
よろしくお願いします。

html
-----

HEAD内

<!-- deq initialize -->
<script src="libs/etc/js/deq00_v2.js" type="text/javascript"></script>

以下、BODY

<div class="contents-2col-left" >
    <p class="pb5" align="right">
        <select id="type" onchange="changeType()">
            <option disabled selected">[01] 2次元1次線形自励系</option>
            <option value="01&01">&emsp;&emsp;1. 固有値の1つが0の場合</option>
            <!-- 略 -->
            <option value="01&09">&emsp;&emsp;9. 固有値が実部と虚部を持つ場合</option>
            <!-- 略 -->
            <option disabled selected">[04] 自励系の諸例</option>
            <option value="04&01">&emsp;&emsp;1. x軸上に周期的に平衡点を持つ自励形</option>
            <!-- 略 -->
            <option value="04&12">&emsp;&emsp;12. Hamilton型 4 三角関数の場合</option>
            <option disabled selected">[99] ユーザー定義</option>
            <option value="09&090">&emsp;&emsp;0. ユーザー定義</option>
            <!-- 略 -->
            <option value="09&095">&emsp;&emsp;5. 入力例 5</option>
        </select><br>
        <input type="checkbox" id="cb_storage" onclick="handleCheckboxStorage(this.checked)">&nbsp; keep list position
    </p>
    <p class="pb10">
        <canvas id="graphCanvas" width="580" height="580" style="border: 1px solid #000;"></canvas>
    </p>
    <p class="pb10" align="right">
        近似方法
        <select id="mode" onchange="changeMode()">
            <option value="1">&emsp;&emsp;Euler法</option>
            <option value="2">&emsp;&emsp;修正Euler法</option>
            <option value="3">&emsp;&emsp;Runge-Kutta法</option>
        </select>
    </p>
</div>
<!-- deq javascript呼び出し -->
<script src="libs/etc/js/deq01_v2.js" type="text/javascript"></script>



deq00_v2.js
------------
let selectedOption;


document.addEventListener('DOMContentLoaded', (event) => {
    // ローカルストレージから選択状態を取得
    const selectedValue = localStorage.getItem('selectedType');
    if (selectedValue) {
        document.getElementById('type').value = selectedValue;
        document.getElementById('cb_storage').checked = true;
    }
});


function initialize() {
    // 描画範囲の初期化
}



deq01_v2.js
------------

// LocalStorage関連 (基本は非使用)
let storageFlg;


// ストレージフラグ
function handleCheckboxStorage(flg) {
    if (flg) {
        storageFlg = true;
    } else {
        storageFlg = false;
    }
}



function changeType() {
    const type = String(document.getElementById('type').value);

    if (storageFlg == true) {
        // 選択状態をローカルストレージに保存
        localStorage.setItem('selectedType', type);
    }
    else {
        // 選択状態をローカルストレージに保存しない
        localStorage.setItem('selectedType', "");
    }
    //以下、省略
}



20240620

先ほど提示して頂いたコードでは、1つ問題がありました。
チェックを入れた場合、繰返しの更新や、閉じて開くの繰返しで、
チェックが消えないようになり、選択されたリストが表示されるようになりました。
ところが、途中でリストを変更しても、更新すると元々選択されていたリストに戻ってしまうのです。
どこに問題があるのか考えてみました。
リストを変更しても、changeType()が呼ばれたとき、storageFlgがtrueになっていないため、
ストレージへの保存が行われなかったのです。
そこで、htmlページのチェックのON/OFFを取得するコード(①)を追加しました。
これで、当初の目的が達成できたように思われます。
このロジックで何か問題があれば、ご指摘下さい。
よろしくお願いします。

html
-----

以下、関連箇所のみ抜粋

<!DOCTYPE HTML >
<html lang="ja">

<HEAD>
    <META charset="UTF-8">

    <title>Differential Equations</title>

    <!-- deq initialize -->
    <script src="libs/etc/js/deq00_v2.js" type="text/javascript"></script>

</HEAD>

<BODY id="common-k" onload="initialize()">

<div class="contents-2col-left" >
    <p class="pb5" align="right">
        <select id="type" onchange="changeType()">
            <option disabled selected">[01] 2次元1次線形自励系</option>
            <option value="01&01">&emsp;&emsp;1. 固有値の1つが0の場合</option>
            <!-- 略 -->
            <option value="01&09">&emsp;&emsp;9. 固有値が実部と虚部を持つ場合</option>
            <!-- 略 -->
            <option disabled selected">[04] 自励系の諸例</option>
            <option value="04&01">&emsp;&emsp;1. x軸上に周期的に平衡点を持つ自励形</option>
            <!-- 略 -->
            <option value="04&12">&emsp;&emsp;12. Hamilton型 4 三角関数の場合</option>
            <option disabled selected">[99] ユーザー定義</option>
            <option value="09&090">&emsp;&emsp;0. ユーザー定義</option>
            <!-- 略 -->
            <option value="09&095">&emsp;&emsp;5. 入力例 5</option>
        </select><br>
        <input type="checkbox" id="cb_storage" onclick="handleCheckboxStorage(this.checked)">&nbsp; keep list position
    </p>
    <p class="pb10">
        <canvas id="graphCanvas" width="580" height="580" style="border: 1px solid #000;"></canvas>
    </p>
    <p class="pb10" align="right">
        近似方法
        <select id="mode" onchange="changeMode()">
            <option value="1">&emsp;&emsp;Euler法</option>
            <option value="2">&emsp;&emsp;修正Euler法</option>
            <option value="3">&emsp;&emsp;Runge-Kutta法</option>
        </select>
    </p>
</div>
<!-- deq javascript呼び出し -->
<script src="libs/etc/js/deq01_v2.js" type="text/javascript"></script>

</BODY>


</html>


deq00_v2.js
------------

let selectedOption;


document.addEventListener('DOMContentLoaded', (event) => {
    // ローカルストレージから選択状態を取得
    const selectedValue = localStorage.getItem('selectedType');
    const checkboxState = localStorage.getItem('storageFlg') === 'true';

    if (selectedValue) {
        document.getElementById('type').value = selectedValue;
    }

    if (checkboxState) {
        document.getElementById('cb_storage').checked = true;
    }
});


function initialize() {
    // 描画範囲の初期化

    // 中略

    changeType();

    // 以下略
}


deq01_v2.js
------------

// LocalStorage関連 (基本は非使用)
let storageFlg = false;

// ストレージフラグ
function handleCheckboxStorage(flg) {
    storageFlg = flg;
    localStorage.setItem('storageFlg', flg);
    if (!flg) {
        localStorage.removeItem('selectedType');
    }
}


function changeType() {
    const type = String(document.getElementById('type').value);

    storageFlg = document.getElementById('cb_storage').checked; // ① この行を追加
    if (storageFlg == true) {
        // 選択状態をローカルストレージに保存
        localStorage.setItem('selectedType', type);
    }

    // 以下略

}



気づくのに時間がかかったのですが、上記のコードではdeq00_v2.jsで、
const checkboxState = localStorage.getItem('storageFlg') === 'true';
が使われています。この式の意味がよく分かりません。解説して頂けますか？

ChatGPT
もちろんです。このコードの意味について詳しく解説します。

const checkboxState = localStorage.getItem('storageFlg') === 'true';
この式は、ローカルストレージに保存された値を取得し、その値が文字列 "true" と等しいかどうかをチェックしています。具体的に分解すると以下のようになります。

localStorage.getItem('storageFlg'):

localStorageはブラウザのローカルストレージにアクセスするためのオブジェクトです。
getItem('storageFlg')メソッドを使って、キー 'storageFlg' に対応する値を取得します。
取得される値は常に文字列です。ローカルストレージに保存されるデータは全て文字列として保存されます。
=== 'true':

ローカルストレージから取得した値（文字列）が、文字列 "true" と等しいかどうかを比較します。
=== 演算子は厳密等価演算子で、型と値の両方を比較します。したがって、この比較では型変換が行われません。
const checkboxState:

変数 checkboxState に、その比較結果（真または偽）を代入します。
比較結果が真なら checkboxState は true、偽なら false となります。
なぜこの方法を使うのか？
ローカルストレージに保存されるデータは全て文字列として保存されるため、真偽値 true や false も文字列として保存されます。例えば、localStorage.setItem('storageFlg', true) とした場合、実際には "true" という文字列が保存されます。

そこで、ローカルストレージから値を取得した後、その値が文字列 "true" であるかどうかを確認して、チェックボックスの状態（真偽値）を判断しています。

実際のコード
javascript
コードをコピーする
document.addEventListener('DOMContentLoaded', (event) => {
    // ローカルストレージから選択状態を取得
    const selectedValue = localStorage.getItem('selectedType');
    // ローカルストレージからチェックボックスの状態を取得し、文字列 "true" かどうかを確認
    const checkboxState = localStorage.getItem('storageFlg') === 'true';

    if (selectedValue) {
        document.getElementById('type').value = selectedValue;
    }

    // checkboxState が true ならばチェックボックスをチェック状態にする
    if (checkboxState) {
        document.getElementById('cb_storage').checked = true;
    }
});
まとめ
localStorage.getItem('storageFlg') === 'true'; はローカルストレージから取得した値が文字列 "true" と等しいかを確認しています。
ローカルストレージに保存されるデータは全て文字列として保存されるため、真偽値を判断する際に文字列との比較が必要です。
その結果を使ってチェックボックスの状態を正しく復元しています。
この方法を使うことで、ブラウザのリロードや再起動後にもチェックボックスの状態を適切に復元することができます。

storageFlgは、どこでLocal Storageにセットされているのでしょうか？
また、このフラグをLocal Storageに保存しないで、これまでと同じ動作をさせることは可能でしょうか？
或いは、storageFlgをLocal Storageにセットする必要がある場合、selectedTypeと同様にremoveさせることは可能でしょうか？

ChatGPT
以下の質問について回答します。

storageFlgはどこでLocal Storageにセットされているのか？
storageFlgをLocal Storageに保存しないで、同じ動作をさせることは可能か？
storageFlgをLocal Storageにセットする必要がある場合、selectedTypeと同様にremoveさせることは可能か？
1. storageFlgはどこでLocal Storageにセットされているのか？
storageFlgは以下のコードでLocal Storageにセットされています。

javascript
コードをコピーする
function handleCheckboxStorage(flg) {
    storageFlg = flg;
    localStorage.setItem('storageFlg', flg); // ここでセットされます
    if (!flg) {
        localStorage.removeItem('selectedType');
    }
}
この関数は、チェックボックスがクリックされたときに呼び出されます。引数 flg はチェックボックスの状態（チェックされているかどうか）を表します。チェックされている場合は true、チェックされていない場合は false です。この状態を storageFlg に保存し、Local Storageにも保存しています。

2. storageFlgをLocal Storageに保存しないで、同じ動作をさせることは可能か？
はい、可能です。Local Storageを使用せずに、チェックボックスの状態に基づいてリストの選択状態を保持することができます。以下はそのための修正案です。

修正案
HTML
変更なし

deq00_v2.js
javascript
コードをコピーする
document.addEventListener('DOMContentLoaded', (event) => {
    const selectedValue = localStorage.getItem('selectedType');
    if (selectedValue) {
        document.getElementById('type').value = selectedValue;
        document.getElementById('cb_storage').checked = true;
    }
});

function initialize() {
    // 描画範囲の初期化
    // 中略
    changeType();
    // 以下略
}
deq01_v2.js
javascript
コードをコピーする
// LocalStorage関連 (基本は非使用)
let storageFlg = false;

// ストレージフラグ
function handleCheckboxStorage(flg) {
    storageFlg = flg;
    if (!flg) {
        localStorage.removeItem('selectedType');
    }
}

function changeType() {
    const type = String(document.getElementById('type').value);

    // チェックボックスの状態を確認し、ストレージフラグを更新
    storageFlg = document.getElementById('cb_storage').checked;

    if (storageFlg) {
        // 選択状態をローカルストレージに保存
        localStorage.setItem('selectedType', type);
    }
}
3. storageFlgをLocal Storageにセットする必要がある場合、selectedTypeと同様にremoveさせることは可能か？
もし、storageFlg をLocal Storageに保存する必要がある場合、チェックボックスがオフになったときに削除するようにすることができます。

deq01_v2.js 修正版
javascript
コードをコピーする
// LocalStorage関連 (基本は非使用)
let storageFlg = false;

// ストレージフラグ
function handleCheckboxStorage(flg) {
    storageFlg = flg;
    localStorage.setItem('storageFlg', flg);
    if (!flg) {
        localStorage.removeItem('selectedType');
        localStorage.removeItem('storageFlg'); // フラグを削除
    }
}

function changeType() {
    const type = String(document.getElementById('type').value);

    // チェックボックスの状態を確認し、ストレージフラグを更新
    storageFlg = document.getElementById('cb_storage').checked;

    if (storageFlg) {
        // 選択状態をローカルストレージに保存
        localStorage.setItem('selectedType', type);
    }
}
まとめ
storageFlg を Local Storage に保存するかどうかは実装の選択です。
保存しない場合でも、チェックボックスの状態に基づいて選択状態を保持することは可能です。
保存する場合、チェックボックスがオフになったときにフラグを削除することも可能です。
お好みの動作に合わせてコードを選択してください。

ありがとうございます。確認してみたいと思います。

ChatGPT
どういたしまして！ぜひ確認してみてください。もし他に質問や問題がありましたら、いつでもお知らせください。お手伝いできることがあれば喜んで対応いたします。

ありがとうございました。3の方法を実装したいと思います。

ChatGPT
了解しました。それでは、以下に3の方法の完全な実装をまとめておきます。

HTML
変更なし

deq00_v2.js
javascript
コードをコピーする
document.addEventListener('DOMContentLoaded', (event) => {
    // ローカルストレージから選択状態を取得
    const selectedValue = localStorage.getItem('selectedType');
    const checkboxState = localStorage.getItem('storageFlg') === 'true';

    if (selectedValue) {
        document.getElementById('type').value = selectedValue;
    }

    if (checkboxState) {
        document.getElementById('cb_storage').checked = true;
    }
});

function initialize() {
    // 描画範囲の初期化
    // 中略
    changeType();
    // 以下略
}
deq01_v2.js
javascript
コードをコピーする
// LocalStorage関連 (基本は非使用)
let storageFlg = false;

// ストレージフラグ
function handleCheckboxStorage(flg) {
    storageFlg = flg;
    localStorage.setItem('storageFlg', flg);
    if (!flg) {
        localStorage.removeItem('selectedType');
        localStorage.removeItem('storageFlg'); // フラグを削除
    }
}

function changeType() {
    const type = String(document.getElementById('type').value);

    // チェックボックスの状態を確認し、ストレージフラグを更新
    storageFlg = document.getElementById('cb_storage').checked;

    if (storageFlg) {
        // 選択状態をローカルストレージに保存
        localStorage.setItem('selectedType', type);
    }
}
説明
deq00_v2.js:

document.addEventListener('DOMContentLoaded', ...) でページが読み込まれた際に、ローカルストレージから selectedType と storageFlg を取得し、フォームの状態を復元します。
initialize 関数で changeType を呼び出し、初期化を行います。
deq01_v2.js:

handleCheckboxStorage 関数でチェックボックスの状態が変わったときに、 storageFlg を更新し、ローカルストレージに保存します。チェックボックスがオフのときは、 selectedType と storageFlg をローカルストレージから削除します。
changeType 関数でリストボックスの選択が変わったときに、 storageFlg の状態に基づいて selectedType をローカルストレージに保存します。
これで、チェックボックスの状態に応じてリストボックスの選択状態が適切に保存され、チェックボックスがオフのときにはローカルストレージから削除されるようになります。

実装がうまくいくことを願っています。その他質問があれば、いつでもどうぞ！







