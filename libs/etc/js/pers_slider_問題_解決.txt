htmlとjsについての質問です。
selectedOptionにデータをセットして、htmlの解説ページから描画ページを呼び出しています。
ローカル環境では、特に問題なく解説ページから渡されたデータに基づいて描画ページで描画が実行されていました。
ところが、サーバーにアップすると、思った通りのデータが渡らず、意図しない画面が表示されてしまいます。
どこが問題なのか調べて見ると、以下の順序で問題が生じていることが分かりました。
描画ページが呼び出されたときに実行されるpers00_v1.jsで、changeType()が実行される。
changeType()はsetAngle()を呼び出す。
setAngle()はjQueryを利用して実装したスライダーを呼び出す。
ここでエラーが発生。エラーが生じるのはjQueryではなく、何故かMathJax.jsなのです。
ローカルでは問題ないのに、何故サーバー上ではかかるエラーが発生するのか分かりません。

今、分かっていることは、次の2点です。
①描画ページで意図しない画面が表示されたとき、Ctrl + Shift + r を実行すると目的の画面が表示されます。
②changeType()でsetAngle()を呼び出さないようにすると、解説ページから目的のデータが描画ページに渡されるのですが、スライダーに初期値がセットされず、ちょっと不自然な感じになります。

どこに問題があるのでしょうか？
よろしくお願いします。

== html == 解説ページ
<!DOCTYPE HTML >
<html>

<HEAD>
    <META charset="UTF-8">
    <title>簡易解説: 隠線処理されたメッシュを使用した曲面の描画</title>
    <!-- css start -->
        <!-- kz_etc start :: class指定:change_border_color, 全ファイル共通:リンク文字色, フォーカスリング -->
        <link rel="stylesheet" href="libs/etc/css/kz_footer_style.css" type="text/css">
        <link rel="stylesheet" href="libs/etc/css/kz_etc_style.css" type="text/css">
        <!-- kz_etc end -->
    <!-- css end -->
    <!-- js start -->
        <!-- jQuery start -->
        <script src="https://code.jquery.com/jquery-3.6.0.min.js" type="text/javascript"></script>
        <!-- kz_style start - img jq_blink, img jq_change -->
        <script src="libs/jQuery/kz/js/jq_kz_style.js" type="text/javascript"></script>
        <!-- kz_style end -->
        <!-- jQuery end -->

        <!-- Sandbox DropDownMenu start -->
        <script src="libs/sandbox/js/script.js" type="text/javascript"></script>
        <!-- Sandbox DropDownMenu end -->

        <script type="text/javascript"
            src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
        </script>
        <script type="text/x-mathjax-config">
            MathJax.Hub.Config({
                TeX: { equationNumbers: { autoNumber: "AMS" }},
                tex2jax: {
                    inlineMath: [ ['$','$'], ["\\(","\\)"] ],
                    processEscapes: true
                },
                "HTML-CSS": { matchFontHeight: false },
                displayAlign: "left",
                displayIndent: "2em"
            });
        </script>

        <!-- pers_doc initialize -->
        <script src="libs/etc/js/pers00_doc1.js" type="text/javascript"></script>

    <!-- js end -->
</HEAD>

<BODY id="common-k" onload="initialize()">

    <div id="main720"> <!-- ① page main: start -->

        <!-- title -->
        <div id="title20">
            <h3 class="pt30 pb40">
                隠線処理が施されたメッシュによる曲面の描画
                &emsp;
                簡易解説
            </h3>
        </div>

        <!-- contents -->
        <div class="pic-left720 pb40">
            <div>
                <div>
                    <ol class="fwm pb40, pl40">
                        <li class="pb40">
                            <p id="02&01"; class="pb10 fwb">
                                $ f(x, y) = |\sin(\omega)|, &ensp; \omega = x + iy $
                            </p>
                            <div class="contents-left pb10"
                                <p class="pb10">
                                    &emsp;
                                </p>
                            </div>
                            <div class="contents-right">
                                <p>
                                    <a href="etc_Pers_v1.html?selectedOption=02%2601">描画へ</a>
                                </p>
                            </div>
                            <div class="c-both"></div>
                        </li>
                    </ol>
                </div>
            </div>

        </div>  <!-- ② end -->

    </div>  <!-- ① page main:   end -->

</BODY>
</html>


== html == 描画ページ
<!DOCTYPE HTML >
<html>

<HEAD>
    <META charset="UTF-8">
    <title>Rendering Surfaces with Hidden Line Meshes</title>
    <!-- css start -->
        <!-- kz_etc start :: class指定:change_border_color, 全ファイル共通:リンク文字色, フォーカスリング -->
        <link rel="stylesheet" href="libs/etc/css/kz_footer_style.css" type="text/css">
        <link rel="stylesheet" href="libs/etc/css/kz_etc_style.css" type="text/css">
        <!-- kz_etc end -->
    <!-- css end -->

    <!-- js start -->
        <!-- jQuery start -->
        <script src="https://code.jquery.com/jquery-3.6.0.min.js" type="text/javascript"></script>
            <!-- kz_style start - img jq_blink, img jq_change -->
            <script src="libs/jQuery/kz/js/jq_kz_style.js" type="text/javascript"></script>
            <!-- kz_style end -->
        <!-- jQuery end -->

        <!-- jQuery ui start -->
        <script type="text/javascript" src="https://code.jquery.com/ui/1.12.0/jquery-ui.min.js"></script>
        <link rel="stylesheet" href="libs/jQuery/css/jquery-ui.css" type="text/css">
        <!-- jQuery ui end -->

        <!-- Sandbox DropDownMenu start -->
        <script src="libs/sandbox/js/script.js" type="text/javascript"></script>
        <!-- Sandbox DropDownMenu end -->

        <!-- Math.js -->
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjs/9.4.4/math.js"></script>
        <script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
        <script type="text/x-mathjax-config">
            MathJax.Hub.Config({
                TeX: { equationNumbers: { autoNumber: "AMS" }},
                tex2jax: {
                    inlineMath: [ ['$','$'], ["\\(","\\)"] ],
                    processEscapes: true
                },
                "HTML-CSS": { matchFontHeight: false },
                displayAlign: "left",
                displayIndent: "2em"
            });
        </script>

        <!-- pers initialize -->
        <script src="libs/etc/js/pers00_v1.js" type="text/javascript"></script>

    <!-- js end -->

</HEAD>

<BODY id="common-k"  onload="initialize()">

    <div id="container">

        <div id="main990"> <!-- page main: start -->

            <!-- title -->
            <div id="title20">
                <h3 class="pt30 pb30">
                    隠線処理が施されたメッシュによる曲面の描画
                </h3>
            </div>

            <!-- contents -->
            <div class="pic-left990 pb25">
                <div id="contents-2col-left_deq" >
                    <div class="grid3b pb5">
                        <p class="fss" align="left">
                            <input type="checkbox" id="cb_bk_color" onclick="handleCheckboxBackColor(this.checked)">&nbsp; change back
                        </p>
                        <p class="fss" align="left">
                            <input type="checkbox" id="pers_storage" onclick="handleCheckboxStorage(this.checked)">&nbsp; keep list pos.
                        </p>
                        <p align="right">
                            <select id="type" style="width: 360px;" onchange="changeType()">
                                <option disabled selected">[01] 関数諸例</option>
                                <option value="01&01">&nbsp; 1. f(x,y) = x^4 + xy - y^4</option>
                                <option disabled selected">[02] 複素関数(絶対値)</option>
                                <option value="02&01">&nbsp;01. f(x,y) = |sin(ω)|, ω = x + iy</option>
                            </select>
                        </p>
                    </div>
                    <div id="contents-2col-left_deq" >
                        <p class="pb10">
                            <canvas id="graphCanvas" width="580" height="580"></canvas>
                        </p>
                    </div>
                    <div id="contents-2col-right_deq" >
                        <div id="vertical-slider-container">
                            <div id="vertical-slider"></div>
                        </div>
                    </div>
                    <div class="c-both"></div>
                    <div id="horizontal-slider-container">
                        <div id="horizontal-slider"></div>
                    </div>
                    <div class="pb5">
                    </div>
                </div>

                <div id="contents-2col-right_deq">
                    <div>
                        <!-- 入力ボックス -->
                        <p class="pb10 input-container3">
                            <label id="l_fxy">$f(x, y) = $</label>
                            <textarea id="i_fxy" cols="30" rows="2" onchange="changeUserInput()"></textarea>
                        </p>
                        <p class="pb10 input-container4">
                            <label id="l_where">$\quad$ where, $\quad r = $</label>
                            <textarea id="i_where" cols="30" rows="1" onchange="changeUserInput()"></textarea>
                        </p>
                    </div>
                    <!-- 方程式の表示(TeX) -->
                    <div>
                        <p class="pb5">
                            <label><span id="fxy"></span></label>
                        </p>
                        <p class="pb10">
                            <label><span id="where"></span></label>
                        </p>
                        <p class="err-effect" id="errorMessages"></p>  <!-- 入力された式が無効だった場合に表示 -->
                    </div>
                    <div>
                        <p class="pb5">
                            <label id="l_coef" style="width: 80px; display: inline-block">Coefficient</label>
                        </p>
                        <p class="pb20">
                            <label id="l_ma" style="width: 20px; display: inline-block"> $a:$ </label>
                            <input type="number" id="ma" value="" style="width:80px; text-align:right;" step="0.1" onchange="changeCoef()">
                            &emsp;
                            <label id="l_md" style="width: 20px; display: inline-block"> $d:$ </label>
                            <input type="number" id="md" value="" style="width:80px; text-align:right;" step="0.1" onchange="changeCoef()"><br>
                        </p>
                    </div>

                    <!-- メッシュ設定 (計算用のライン数と描画用のライン数の設定) -->
                    == 略 ==

                    <!-- 描画範囲 -->
                    == 略 ==

                    <!-- 描画角度(見出し) -->
                    <div class="pb5">
                        <p>
                            View Angle
                        </p>
                    </div>

                    <!-- 描画角度 alpha -->
                    <div class="pb10">
                        <p>
                            <label style="width: 8px; display: inline-block"> $ \alpha $ </label> :
                            <input type="text" id="angleAlpha" style="font-size: 100%; width:50px; text-align:right;" min="-180" max="180" onchange="changeAngle()" value="">
                        </p>
                    </div>
                    <!-- 描画角度 gamma -->
                    <div class="pb30">
                        <p>
                            <label style="width: 8px; display: inline-block"> $ \gamma $ </label> :
                            <input type="text" id="angleGamma" style="font-size: 100%; width:50px; text-align:right;" min="-90" max="90" onchange="changeAngle()" value="">
                        </p>
                    </div>
                    <p class="pb20">
                        <button class="btn-radius-solid" id="start" onclick="startDraw()">Start</button>
                        &emsp;&emsp;&nbsp;&nbsp;
                        <button class="btn-radius-solid" id="reset" onclick="resetDraw()">Reset</button>
                    </p>

                <!-- pers javascript呼び出し -->
                <script src="libs/etc/js/pers01_v1.js" type="text/javascript"></script>

                    <p class="cLink">
                        &emsp;&emsp;&emsp;&emsp;
                        <!-- 戻るリンク -->
                    </p>
                </div>
                <div class="c-both"></div>
            </div>
        </div>
    </div>

</BODY>
</html>


== js == pers00_v1.js

let selectedOption;

function initialize() {
    // 現在表示されているurlを取得して、日本語ページか英語ページかの振り分けを行う
    const urlHere = window.location.href;
    // 式を表示する
    document.getElementById('fxy').innerText = "$ f(x,y) = x^4 + xy - y^4 $";
    document.getElementById('where').innerText = "";

    // 描画アングルに初期値を設定する
    document.getElementById('angleAlpha').value =  30;
    document.getElementById('angleGamma').value = -30;

    // URLから選択すべきオプションを取得
    const urlParams = new URLSearchParams(window.location.search);
    const selectedOptionRaw = urlParams.get('selectedOption');
    selectedOption = decodeURIComponent(selectedOptionRaw); // URLデコード

    // 選択ボックスの初期値を設定する
    const selectType = document.getElementById('type');
    selectType.selectedIndex = 1;
    changeType();

    // 解説ページから呼ばれたときは、以下を実行する
    // 選択すべきオプションが指定されている場合、そのオプションを選択し、changeType()関数を呼び出します
    if (selectedOption != "null") {
        // goBack関数を呼び出す
        goBack();

        const selectElement = document.getElementById('type');
        selectElement.value = selectedOption; // 選択肢を選択
        changeType(); // 選択肢が変更された場合の処理を実行
        if (selectedOption.substr(0, 2) != "09") {
            setTimeout(function() {
                startDraw(); // 描画の実行
            }, 2000);
            document.getElementById('start').disabled = true;
        }
        else {
            document.getElementById('fxy').focus();
        }
    }

}

// 解説のページに戻る関数
function goBack() {
    // window.history.back(); // ブラウザの「戻る」ボタンと同じ動作 <- 戻る位置(行)が10行程度ずれることがある
    // <a>要素を作成
    var link = document.createElement('a');

    // 現在表示されているurlを取得して、日本語ページか英語ページかの振り分けを行う
    const urlHere = window.location.href;

    if (urlHere.indexOf('en') != -1) {
        // href属性を設定
        link.href = "etc_pers_doc1_en.html?selectedOption=" + encodeURIComponent(selectedOption);
        // テキストコンテンツを設定
        link.textContent = "return to Explanation page";
    }
    else {
        // href属性を設定
        link.href = "etc_pers_doc1.html?selectedOption=" + encodeURIComponent(selectedOption);
        // テキストコンテンツを設定
        link.textContent = "解説ページに戻る";
    }

    // <p>要素を取得し、リンクを追加
    var paragraphElement = document.querySelector('.cLink');
    paragraphElement.appendChild(link);
}

== js == pers01_v1.js

let m_alpha =  30.0;                          // m_alpha: X軸が基線と成す角
let m_gamma = -30.0;                          // m_gamma: 基線にもっとも近い矩形の頂点を視点Eから仰ぐ角度

// 描画角度 設定 js -> html
function setAngle() {
    document.getElementById('angleAlpha').value = m_alpha;
    document.getElementById('angleGamma').value = m_gamma;
    // slider bar
    $("#horizontal-slider").slider("value", m_alpha);
    $("#vertical-slider").slider("value", m_gamma);

}

// 描画関数の変更 //
function changeType() {
    const type = String(document.getElementById('type').value);

    // Angle
    m_alpha =  30.0;
    m_gamma = -30.0;
    setAngle();

    const typeAry = type.split('&');
    switch (typeAry[0]) {
        case "01":
            switch (typeAry[1]) {
                case "01":  // f(x,y) = x^4 + xy - y^4
                    m_index = 101;
                    // 式を表示する
                    document.getElementById('fxy').innerText = "$ f(x, y) = x^4 + xy - y^4 $";
                    break;
                defaut:
                    break;
            }
            break;
        case "02":
            switch (typeAry[1]) {
                case "01":  // f(x,y) = |sin(ω)|, ω = x + iy, x:-6.25to6.25 y:-10to10 //20230815 add
                    m_index = 201;
                    // 式を表示する
                    document.getElementById('fxy').innerText = "$ f(x, y) = |\\sin(\\omega)|, \\omega = x + iy $";
                    break;
                defaut:
                    break;
            }
            break;
        defaut:
            break;
    }
    // 他の処理が終わった後にMathJaxを再度実行する
    TeX();
}

// slider bar
$(function() {
    $("#horizontal-slider").slider({
        max: 180,
        min: -180,
        value: m_alpha,
        step: 1,
        slide: function(event, ui) {
            $("#angleAlpha").val(ui.value);
            changeAngle();
        }
    });

    $("#vertical-slider").slider({
        orientation: "vertical",
        max: 90,
        min: -90,
        value: m_gamma,
        step: 1,
        slide: function(event, ui) {
            $("#angleGamma").val(ui.value);
            changeAngle();
        }
    });

    // Initialize slider values based on the text boxes
    $("#horizontal-slider").slider("value", $("#angleAlpha").val());
    $("#vertical-slider").slider("value", $("#angleGamma").val());

    // Update sliders when the text box values change
    $("#angleAlpha").on("change", function() {
        $("#horizontal-slider").slider("value", $(this).val());
        changeAngle();
    });

    $("#angleGamma").on("change", function() {
        $("#vertical-slider").slider("value", $(this).val());
        changeAngle();
    });

});


回答

ローカル環境では正常に動作していた描画ページが、サーバーにアップロードするとデータが正しく渡らない問題について考えられる原因と対策をいくつか挙げます。

考えられる原因
ブラウザキャッシュの影響
ローカル環境ではキャッシュがクリアされやすく、更新された内容がすぐに反映されるのに対し、サーバー上では古いキャッシュが残っている可能性があります。Ctrl + Shift + Rで正常に表示されるのもキャッシュに関連することを示唆しています。

MathJaxの読み込みタイミング
setAngle()を呼び出す際にMathJaxが関係するエラーが発生しているとのことですが、MathJaxの読み込みや処理がスライダーや他の要素に干渉している可能性があります。サーバー上でのスクリプトの読み込み順がローカルと異なり、MathJaxがまだ完全に初期化されていない段階で他の処理が実行されてしまう場合があります。

URLパラメータの処理タイミング
サーバー上ではURLパラメータが正しく処理されない場合があります。selectedOptionの値がエンコードやデコードの際に変換されてしまい、意図したデータが渡らない可能性があります。

ファイルパスや相対パスの違い
サーバー上でのファイルの配置やパスがローカル環境とは異なり、スクリプトやリソースのロードに失敗している場合があります。たとえば、MathJax.jsやjQueryが正しく読み込まれていない可能性があります。

解決策
キャッシュのクリア
サーバー上でのキャッシュをクリアするか、HTMLやJavaScriptファイルのバージョンを変更することでキャッシュが利用されないようにします。たとえば、次のようにクエリパラメータを付けることが有効です。

html
コードをコピーする
<script src="libs/etc/js/pers00_v1.js?v=1.0" type="text/javascript"></script>
MathJaxの読み込み順序の確認
MathJaxが他のスクリプトよりも後に完全に読み込まれるように設定します。例えば、deferやasync属性を追加してスクリプトの実行タイミングを調整することが考えられます。

html
コードをコピーする
<script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML" defer></script>
パラメータの受け渡し確認
URLSearchParamsで正しくパラメータを取得しているか確認します。サーバー環境でデバッグツールを使って、正しいパラメータが取得できているか確認すると良いでしょう。

ファイルパスの確認
サーバー上での相対パスが正しいか確認し、スクリプトやスタイルシートが確実にロードされているかを再確認してください。特に、libs/etcのようなパス指定が正しく機能しているかを検証します。

これらの点を確認・調整することで、サーバー上での動作がローカル環境と同様に安定する可能性があります。







あなた:
MathJaxの読み込み順序の確認で、defer属性を追加することで、サーバ上でもロカール環境と同様にデータが正常に渡され、目的の描画が実行されるようになりました。
MathJax.jsの読み込みタイミングは結構難しいと思いました。いろいろなライブラリを使用する場合は、気をつける必要があるのだと思いますが、よく理解できていません。これからも、問題が生じたときはよろしくお願いします。
ありがとうございました。助かりました！
ChatGPT:
ChatGPT
メモリを更新しました
解決できてよかったです！MathJaxの読み込みタイミングは、特に複数のライブラリを使っている場合、他のスクリプトとの依存関係が影響することが多いので、難しい部分があります。defer属性で順序を管理する方法は、まさにその問題を回避するための有効な手段です。今後も何か問題があれば、ぜひお気軽にご相談ください。引き続きサポートします！










